{"version":3,"file":"map-colorizer","sources":["map-colorizer/src/path.js","map-colorizer/src/backtracking-colorizer.js","map-colorizer/src/polygon.js","map-colorizer/src/bounding-box.js","map-colorizer/src/features.js","map-colorizer/src/neighbors.js","map-colorizer/src/bounding-boxes.js","map-colorizer/src/ring.js","map-colorizer/src/rings.js"],"sourcesContent":["class Path {\n\n    constructor(neighbors, startIndex) {\n        this.values = this.plot(neighbors, startIndex || 0);\n    }\n\n    plot(neighbors, startIndex) {\n        const path = [];\n        const cache = {};\n        this.addNeighborsToPath(neighbors, startIndex, cache, path);\n        this.addWithoutNeighborsToPath(neighbors, cache, path);\n        return path;\n    }\n\n    addNeighborsToPath(neighbors, index, cache, path) {\n        for(let neighbor of neighbors[index]) {\n            if(!cache[neighbor]) {\n                cache[neighbor] = true;\n                path.push(neighbor);\n                this.addNeighborsToPath(neighbors, neighbor, cache, path);\n            }\n        }\n    }\n\n    addWithoutNeighborsToPath(neighbors, cache, path) {\n        for(let i = 0; i < neighbors.length; i++) {\n            if(!cache[i]) {\n                path.unshift(i);\n            }\n        }\n    }\n}\n\nexport default Path;","import Path from \"./path\";\n\nclass BacktrackingColorizer {\n\n    constructor(neighbors, options) {\n\n        options = options || {};\n        this.numberOfColors = options.numberOfColors || 10;\n        this.startIndexIslands = options.startIndexIslands || 0;\n        this.maxAttempts = options.maxAttempts || neighbors.length * 100;\n\n        const path = options.path || new Path(neighbors);\n\n        this.attempts = 0;\n        this.colors = [...Array(neighbors.length)];\n        this.walk(path.values, neighbors, 0);\n        this.colorCount = this.countColors();\n    }\n\n    walk(path, neighbors, index) {\n        let feature = path[index];\n        if(feature === undefined || neighbors[feature] === undefined) {\n            this.solved  = true;\n            return true;\n        }\n        if(++this.attempts >= this.maxAttempts) {\n            this.solved  = false;\n            return true;\n        }\n        if(neighbors[feature].length === 0) {\n            this.startIndexIslands = this.startIndexIslands >= this.numberOfColors ? 0 : this.startIndexIslands;\n            this.colors[feature] = this.startIndexIslands++;\n            return this.walk(path, neighbors, index + 1);\n        }\n        for(let color = 0; color < this.numberOfColors; color++) {\n            if(this.isFree(color, neighbors[feature])) {\n                this.colors[feature] = color;\n                if(this.walk(path, neighbors, index + 1)) {\n                    return true;\n                }\n                this.colors[feature] = undefined;\n            }\n        }\n        return false;\n    }\n\n    isFree(color, neighbors) {\n        for(let neighbor of neighbors) {\n            if(this.colors[neighbor] === color) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    countColors() {\n        let colorCount = 0;\n        for(let color of this.colors) {\n            colorCount = Math.max(colorCount, color || 0);\n        }\n        return colorCount + 1;\n    }\n}\n\nexport default BacktrackingColorizer;","const isNumeric = (n) => {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n};\n\nclass Polygon {\n\n    static isGeoJSON(object) {\n        return Array.isArray(object) && this.isPlain(object[0]);\n    }\n\n    static isPlain(object) {\n        return Array.isArray(object) &&\n               Array.isArray(object[0]) &&\n               object[0].length === 2 &&\n               isNumeric(object[0][0]) &&\n               isNumeric(object[0][1]);\n    }\n}\n\nexport default Polygon;","import Polygon from \"./polygon\";\n\nclass BoundingBox {\n\n    constructor(object) {\n\n        this.x1 = this.y1 = Infinity;\n        this.x2 = this.y2 = -Infinity;\n\n        if(Polygon.isGeoJSON(object)) {\n            for(let points of object) {\n                this.reduce(points);\n            }\n        }\n        else if (Polygon.isPlain(object)) {\n            this.reduce(object);\n        }\n    }\n\n    reduce(points) {\n        for(const point of points) {\n            this.x1 = Math.min(this.x1, point[0]);\n            this.y1 = Math.min(this.y1, point[1]);\n            this.x2 = Math.max(this.x2, point[0]);\n            this.y2 = Math.max(this.y2, point[1]);\n        }\n    }\n\n    intersects(other) {\n        return this.x1 < other.x2 &&\n               this.x2 > other.x1 &&\n               this.y1 < other.y2 &&\n               this.y2 > other.y1;\n    }\n}\n\nexport default BoundingBox;\n\n","class Features {\n\n    constructor(object, strategy) {\n        this.values = this.map(object.features || object, strategy);\n    }\n\n    map(object, strategy) {\n        return object.map((item, i) => {\n            const feature = {\n                index: i,\n                shapes: []\n            };\n            if(item.geometry) {\n                if(item.geometry.type === \"Polygon\") {\n                    feature.shapes.push(new strategy(item.geometry.coordinates));\n                }\n                if(item.geometry.type === \"MultiPolygon\") {\n                    for(const coordinates of item.geometry.coordinates) {\n                        feature.shapes.push(new strategy(coordinates));\n                    }\n                }\n            }\n            else {\n                feature.shapes.push(new strategy(item));\n            }\n            return feature;\n        });\n    }\n}\n\nexport default Features;\n","class Neighbors {\n\n    constructor(features) {\n        this.values = this.intersect(features);\n    }\n\n    intersect(features) {\n        return features.map((feature) => {\n            const neighbors = [];\n            for(const shape of feature.shapes) {\n                for(const nfeature of feature.possibleNeighbors) {\n                    for(const nshape of nfeature.shapes) {\n                        if(nfeature.index !== feature.index && neighbors.indexOf(nfeature.index) === -1 && nshape.intersects(shape)) {\n                            neighbors.push(nfeature.index);\n                        }\n                    }\n                }\n            }\n            return neighbors;\n        });\n    }\n}\n\nexport default Neighbors;","import BoundingBox from \"./bounding-box\";\nimport Features from \"./features\";\nimport Neighbors from \"./neighbors\";\n\nclass BoundingBoxes {\n    constructor(polygons) {\n        const bboxes = new Features(polygons, BoundingBox);\n        for(const feature of bboxes.values) {\n            feature.possibleNeighbors = bboxes.values;\n        }\n        this.neighbors = new Neighbors(bboxes.values);\n    }\n}\n\nexport default BoundingBoxes;","import Polygon from \"./polygon\";\n\nclass Ring {\n\n    constructor(object) {\n\n        this.points = [];\n\n        if(Polygon.isGeoJSON(object)) {\n            for(const points of object) {\n                this.quantize(points);\n            }\n        }\n        else if (Polygon.isPlain(object)) {\n            this.quantize(object);\n        }\n    }\n\n    quantize(points) {\n        for(const point of points) {\n            this.points.push([\n                Math.floor(point[0]),\n                Math.floor(point[1])\n            ]);\n        }\n    }\n\n    intersects(other) {\n        for(const t of this.points) {\n            for(const o of other.points) {\n                if(t[0] === o[0] && t[1] === o[1]) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default Ring;","import BoundingBoxes from \"./bounding-boxes\";\nimport Features from \"./features\";\nimport Neighbors from \"./neighbors\";\nimport Ring from \"./ring\";\n\nclass Rings {\n    constructor(featureCollection) {\n        const bboxes = new BoundingBoxes(featureCollection);\n        const rings = new Features(featureCollection, Ring);\n        let i = 0;\n        for(const feature of rings.values) {\n            feature.possibleNeighbors = bboxes.neighbors.values[i].map((n) => {\n                return rings.values[n];\n            });\n            i++;\n        }\n        this.neighbors = new Neighbors(rings.values);\n    }\n}\n\nexport default Rings;"],"names":["Path","neighbors","startIndex","values","plot","path","cache","addNeighborsToPath","addWithoutNeighborsToPath","index","neighbor","push","i","length","unshift","BacktrackingColorizer","options","numberOfColors","startIndexIslands","maxAttempts","attempts","colors","Array","walk","colorCount","countColors","feature","undefined","solved","color","isFree","Math","max","isNumeric","n","isNaN","parseFloat","isFinite","Polygon","object","isArray","isPlain","BoundingBox","x1","y1","Infinity","x2","y2","isGeoJSON","points","reduce","point","min","other","Features","strategy","map","features","item","geometry","type","shapes","coordinates","Neighbors","intersect","shape","possibleNeighbors","nfeature","nshape","indexOf","intersects","BoundingBoxes","polygons","bboxes","Ring","quantize","floor","t","o","Rings","featureCollection","rings"],"mappings":"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"}